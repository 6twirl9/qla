# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Makefile.am for building the qla_dqn library


srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
subdir = lib/qla_dqn
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/include/qla_config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
___libqla_dqn_a_AR = $(AR) $(ARFLAGS)
___libqla_dqn_a_LIBADD =
nodist____libqla_dqn_a_OBJECTS = QLA_DQN_D_eq_D.$(OBJEXT)
___libqla_dqn_a_OBJECTS = $(nodist____libqla_dqn_a_OBJECTS)
am__dirstamp = $(am__leading_dot)dirstamp
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/include
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(nodist____libqla_dqn_a_SOURCES)
DIST_SOURCES =
nodist_includeHEADERS_INSTALL = $(INSTALL_HEADER)
HEADERS = $(nodist_include_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
BACKEND_TEST_CMD = @BACKEND_TEST_CMD@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EXEEXT = @EXEEXT@
GNUCC = @GNUCC@
HAVE_OPENMP = @HAVE_OPENMP@
HAVE_XLC = @HAVE_XLC@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LATEX = @LATEX@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LTLIBOBJS = @LTLIBOBJS@
M4 = @M4@
MAKEINFO = @MAKEINFO@
NC = @NC@
NC2_FALSE = @NC2_FALSE@
NC2_TRUE = @NC2_TRUE@
NC3_FALSE = @NC3_FALSE@
NC3_TRUE = @NC3_TRUE@
NCN_FALSE = @NCN_FALSE@
NCN_TRUE = @NCN_TRUE@
OBJEXT = @OBJEXT@
OPT_440 = @OPT_440@
OPT_440_FALSE = @OPT_440_FALSE@
OPT_440_TRUE = @OPT_440_TRUE@
OPT_440d = @OPT_440d@
OPT_440d_FALSE = @OPT_440d_FALSE@
OPT_440d_TRUE = @OPT_440d_TRUE@
OPT_C99_COMPLEX = @OPT_C99_COMPLEX@
OPT_SSE = @OPT_SSE@
OPT_SSE2 = @OPT_SSE2@
OPT_SSE2_FALSE = @OPT_SSE2_FALSE@
OPT_SSE2_TRUE = @OPT_SSE2_TRUE@
OPT_SSE3 = @OPT_SSE3@
OPT_SSE_FALSE = @OPT_SSE_FALSE@
OPT_SSE_TRUE = @OPT_SSE_TRUE@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSE_CC = @SSE_CC@
SSE_CFLAGS = @SSE_CFLAGS@
STRIP = @STRIP@
TEMP_PRECISION = @TEMP_PRECISION@
TEST_CC = @TEST_CC@
TEST_CFLAGS = @TEST_CFLAGS@
VERSION = @VERSION@
ac_ct_CC = @ac_ct_CC@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
AUTOMAKE_OPTIONS = no-dependencies
QLASRC1 = \
QLA_DQN_D_eq_D.c \
QLA_DQN_D_veq_D.c \
QLA_DQN_D_veq_pD.c \
QLA_DQN_D_xeq_D.c \
QLA_DQN_D_xeq_pD.c \
QLA_DQN_H_eq_H.c \
QLA_DQN_H_veq_H.c \
QLA_DQN_H_veq_pH.c \
QLA_DQN_H_xeq_H.c \
QLA_DQN_H_xeq_pH.c \
QLA_DQN_M_eq_M.c \
QLA_DQN_M_veq_M.c \
QLA_DQN_M_veq_pM.c \
QLA_DQN_M_xeq_M.c \
QLA_DQN_M_xeq_pM.c \
QLA_DQN_P_eq_P.c \
QLA_DQN_P_veq_P.c \
QLA_DQN_P_veq_pP.c \
QLA_DQN_P_xeq_P.c \
QLA_DQN_P_xeq_pP.c \
QLA_DQN_V_eq_V.c \
QLA_DQN_V_veq_V.c \
QLA_DQN_V_veq_pV.c \
QLA_DQN_V_xeq_V.c \
QLA_DQN_V_xeq_pV.c \
QLA_QDN_c1_eq_D_dot_D.c \
QLA_QDN_c1_eq_H_dot_H.c \
QLA_QDN_c1_eq_M_dot_M.c \
QLA_QDN_c1_eq_P_dot_P.c \
QLA_QDN_c1_eq_V_dot_V.c \
QLA_QDN_c1_veq_D_dot_D.c \
QLA_QDN_c1_veq_D_dot_pD.c \
QLA_QDN_c1_veq_H_dot_H.c \
QLA_QDN_c1_veq_H_dot_pH.c \
QLA_QDN_c1_veq_M_dot_M.c \
QLA_QDN_c1_veq_M_dot_pM.c \
QLA_QDN_c1_veq_P_dot_P.c \
QLA_QDN_c1_veq_P_dot_pP.c \
QLA_QDN_c1_veq_V_dot_V.c \
QLA_QDN_c1_veq_V_dot_pV.c \
QLA_QDN_c1_veq_pD_dot_D.c \
QLA_QDN_c1_veq_pD_dot_pD.c \
QLA_QDN_c1_veq_pH_dot_H.c \
QLA_QDN_c1_veq_pH_dot_pH.c \
QLA_QDN_c1_veq_pM_dot_M.c \
QLA_QDN_c1_veq_pM_dot_pM.c \
QLA_QDN_c1_veq_pP_dot_P.c \
QLA_QDN_c1_veq_pP_dot_pP.c \
QLA_QDN_c1_veq_pV_dot_V.c \
QLA_QDN_c1_veq_pV_dot_pV.c \
QLA_QDN_c1_xeq_D_dot_D.c \
QLA_QDN_c1_xeq_D_dot_pD.c \
QLA_QDN_c1_xeq_H_dot_H.c \
QLA_QDN_c1_xeq_H_dot_pH.c \
QLA_QDN_c1_xeq_M_dot_M.c \
QLA_QDN_c1_xeq_M_dot_pM.c \
QLA_QDN_c1_xeq_P_dot_P.c \
QLA_QDN_c1_xeq_P_dot_pP.c \
QLA_QDN_c1_xeq_V_dot_V.c \
QLA_QDN_c1_xeq_V_dot_pV.c \
QLA_QDN_c1_xeq_pD_dot_D.c \
QLA_QDN_c1_xeq_pD_dot_pD.c \
QLA_QDN_c1_xeq_pH_dot_H.c \
QLA_QDN_c1_xeq_pH_dot_pH.c \
QLA_QDN_c1_xeq_pM_dot_M.c \
QLA_QDN_c1_xeq_pM_dot_pM.c \
QLA_QDN_c1_xeq_pP_dot_P.c \
QLA_QDN_c1_xeq_pP_dot_pP.c \
QLA_QDN_c1_xeq_pV_dot_V.c \
QLA_QDN_c1_xeq_pV_dot_pV.c \
QLA_QDN_d1_eq_sum_D.c \
QLA_QDN_d1_veq_sum_D.c \
QLA_QDN_d1_veq_sum_pD.c \
QLA_QDN_d1_xeq_sum_D.c \
QLA_QDN_d1_xeq_sum_pD.c \
QLA_QDN_h1_eq_sum_H.c \
QLA_QDN_h1_veq_sum_H.c \
QLA_QDN_h1_veq_sum_pH.c \
QLA_QDN_h1_xeq_sum_H.c \
QLA_QDN_h1_xeq_sum_pH.c \
QLA_QDN_m1_eq_sum_M.c \
QLA_QDN_m1_veq_sum_M.c \
QLA_QDN_m1_veq_sum_pM.c \
QLA_QDN_m1_xeq_sum_M.c \
QLA_QDN_m1_xeq_sum_pM.c \
QLA_QDN_p1_eq_sum_P.c \
QLA_QDN_p1_veq_sum_P.c \
QLA_QDN_p1_veq_sum_pP.c \
QLA_QDN_p1_xeq_sum_P.c \
QLA_QDN_p1_xeq_sum_pP.c \
QLA_QDN_r1_eq_norm2_D.c \
QLA_QDN_r1_eq_norm2_H.c \
QLA_QDN_r1_eq_norm2_M.c \
QLA_QDN_r1_eq_norm2_P.c \
QLA_QDN_r1_eq_norm2_V.c \
QLA_QDN_r1_eq_re_D_dot_D.c \
QLA_QDN_r1_eq_re_H_dot_H.c \
QLA_QDN_r1_eq_re_M_dot_M.c \
QLA_QDN_r1_eq_re_P_dot_P.c \
QLA_QDN_r1_eq_re_V_dot_V.c \
QLA_QDN_r1_veq_norm2_D.c \
QLA_QDN_r1_veq_norm2_H.c \
QLA_QDN_r1_veq_norm2_M.c \
QLA_QDN_r1_veq_norm2_P.c \
QLA_QDN_r1_veq_norm2_V.c \
QLA_QDN_r1_veq_norm2_pD.c \
QLA_QDN_r1_veq_norm2_pH.c \
QLA_QDN_r1_veq_norm2_pM.c \
QLA_QDN_r1_veq_norm2_pP.c \
QLA_QDN_r1_veq_norm2_pV.c \
QLA_QDN_r1_veq_re_D_dot_D.c \
QLA_QDN_r1_veq_re_D_dot_pD.c \
QLA_QDN_r1_veq_re_H_dot_H.c \
QLA_QDN_r1_veq_re_H_dot_pH.c \
QLA_QDN_r1_veq_re_M_dot_M.c \
QLA_QDN_r1_veq_re_M_dot_pM.c \
QLA_QDN_r1_veq_re_P_dot_P.c \
QLA_QDN_r1_veq_re_P_dot_pP.c \
QLA_QDN_r1_veq_re_V_dot_V.c \
QLA_QDN_r1_veq_re_V_dot_pV.c \
QLA_QDN_r1_veq_re_pD_dot_D.c \
QLA_QDN_r1_veq_re_pD_dot_pD.c \
QLA_QDN_r1_veq_re_pH_dot_H.c \
QLA_QDN_r1_veq_re_pH_dot_pH.c \
QLA_QDN_r1_veq_re_pM_dot_M.c \
QLA_QDN_r1_veq_re_pM_dot_pM.c \
QLA_QDN_r1_veq_re_pP_dot_P.c \
QLA_QDN_r1_veq_re_pP_dot_pP.c \
QLA_QDN_r1_veq_re_pV_dot_V.c \
QLA_QDN_r1_veq_re_pV_dot_pV.c \
QLA_QDN_r1_xeq_norm2_D.c \
QLA_QDN_r1_xeq_norm2_H.c \
QLA_QDN_r1_xeq_norm2_M.c \
QLA_QDN_r1_xeq_norm2_P.c \
QLA_QDN_r1_xeq_norm2_V.c \
QLA_QDN_r1_xeq_norm2_pD.c \
QLA_QDN_r1_xeq_norm2_pH.c \
QLA_QDN_r1_xeq_norm2_pM.c \
QLA_QDN_r1_xeq_norm2_pP.c \
QLA_QDN_r1_xeq_norm2_pV.c \
QLA_QDN_r1_xeq_re_D_dot_D.c \
QLA_QDN_r1_xeq_re_D_dot_pD.c \
QLA_QDN_r1_xeq_re_H_dot_H.c \
QLA_QDN_r1_xeq_re_H_dot_pH.c \
QLA_QDN_r1_xeq_re_M_dot_M.c \
QLA_QDN_r1_xeq_re_M_dot_pM.c \
QLA_QDN_r1_xeq_re_P_dot_P.c \
QLA_QDN_r1_xeq_re_P_dot_pP.c \
QLA_QDN_r1_xeq_re_V_dot_V.c \
QLA_QDN_r1_xeq_re_V_dot_pV.c \
QLA_QDN_r1_xeq_re_pD_dot_D.c \
QLA_QDN_r1_xeq_re_pD_dot_pD.c \
QLA_QDN_r1_xeq_re_pH_dot_H.c \
QLA_QDN_r1_xeq_re_pH_dot_pH.c \
QLA_QDN_r1_xeq_re_pM_dot_M.c \
QLA_QDN_r1_xeq_re_pM_dot_pM.c \
QLA_QDN_r1_xeq_re_pP_dot_P.c \
QLA_QDN_r1_xeq_re_pP_dot_pP.c \
QLA_QDN_r1_xeq_re_pV_dot_V.c \
QLA_QDN_r1_xeq_re_pV_dot_pV.c \
QLA_QDN_v1_eq_sum_V.c \
QLA_QDN_v1_veq_sum_V.c \
QLA_QDN_v1_veq_sum_pV.c \
QLA_QDN_v1_xeq_sum_V.c \
QLA_QDN_v1_xeq_sum_pV.c

QLAOBJ1 = \
QLA_DQN_D_eq_D.o \
QLA_DQN_D_veq_D.o \
QLA_DQN_D_veq_pD.o \
QLA_DQN_D_xeq_D.o \
QLA_DQN_D_xeq_pD.o \
QLA_DQN_H_eq_H.o \
QLA_DQN_H_veq_H.o \
QLA_DQN_H_veq_pH.o \
QLA_DQN_H_xeq_H.o \
QLA_DQN_H_xeq_pH.o \
QLA_DQN_M_eq_M.o \
QLA_DQN_M_veq_M.o \
QLA_DQN_M_veq_pM.o \
QLA_DQN_M_xeq_M.o \
QLA_DQN_M_xeq_pM.o \
QLA_DQN_P_eq_P.o \
QLA_DQN_P_veq_P.o \
QLA_DQN_P_veq_pP.o \
QLA_DQN_P_xeq_P.o \
QLA_DQN_P_xeq_pP.o \
QLA_DQN_V_eq_V.o \
QLA_DQN_V_veq_V.o \
QLA_DQN_V_veq_pV.o \
QLA_DQN_V_xeq_V.o \
QLA_DQN_V_xeq_pV.o \
QLA_QDN_c1_eq_D_dot_D.o \
QLA_QDN_c1_eq_H_dot_H.o \
QLA_QDN_c1_eq_M_dot_M.o \
QLA_QDN_c1_eq_P_dot_P.o \
QLA_QDN_c1_eq_V_dot_V.o \
QLA_QDN_c1_veq_D_dot_D.o \
QLA_QDN_c1_veq_D_dot_pD.o \
QLA_QDN_c1_veq_H_dot_H.o \
QLA_QDN_c1_veq_H_dot_pH.o \
QLA_QDN_c1_veq_M_dot_M.o \
QLA_QDN_c1_veq_M_dot_pM.o \
QLA_QDN_c1_veq_P_dot_P.o \
QLA_QDN_c1_veq_P_dot_pP.o \
QLA_QDN_c1_veq_V_dot_V.o \
QLA_QDN_c1_veq_V_dot_pV.o \
QLA_QDN_c1_veq_pD_dot_D.o \
QLA_QDN_c1_veq_pD_dot_pD.o \
QLA_QDN_c1_veq_pH_dot_H.o \
QLA_QDN_c1_veq_pH_dot_pH.o \
QLA_QDN_c1_veq_pM_dot_M.o \
QLA_QDN_c1_veq_pM_dot_pM.o \
QLA_QDN_c1_veq_pP_dot_P.o \
QLA_QDN_c1_veq_pP_dot_pP.o \
QLA_QDN_c1_veq_pV_dot_V.o \
QLA_QDN_c1_veq_pV_dot_pV.o \
QLA_QDN_c1_xeq_D_dot_D.o \
QLA_QDN_c1_xeq_D_dot_pD.o \
QLA_QDN_c1_xeq_H_dot_H.o \
QLA_QDN_c1_xeq_H_dot_pH.o \
QLA_QDN_c1_xeq_M_dot_M.o \
QLA_QDN_c1_xeq_M_dot_pM.o \
QLA_QDN_c1_xeq_P_dot_P.o \
QLA_QDN_c1_xeq_P_dot_pP.o \
QLA_QDN_c1_xeq_V_dot_V.o \
QLA_QDN_c1_xeq_V_dot_pV.o \
QLA_QDN_c1_xeq_pD_dot_D.o \
QLA_QDN_c1_xeq_pD_dot_pD.o \
QLA_QDN_c1_xeq_pH_dot_H.o \
QLA_QDN_c1_xeq_pH_dot_pH.o \
QLA_QDN_c1_xeq_pM_dot_M.o \
QLA_QDN_c1_xeq_pM_dot_pM.o \
QLA_QDN_c1_xeq_pP_dot_P.o \
QLA_QDN_c1_xeq_pP_dot_pP.o \
QLA_QDN_c1_xeq_pV_dot_V.o \
QLA_QDN_c1_xeq_pV_dot_pV.o \
QLA_QDN_d1_eq_sum_D.o \
QLA_QDN_d1_veq_sum_D.o \
QLA_QDN_d1_veq_sum_pD.o \
QLA_QDN_d1_xeq_sum_D.o \
QLA_QDN_d1_xeq_sum_pD.o \
QLA_QDN_h1_eq_sum_H.o \
QLA_QDN_h1_veq_sum_H.o \
QLA_QDN_h1_veq_sum_pH.o \
QLA_QDN_h1_xeq_sum_H.o \
QLA_QDN_h1_xeq_sum_pH.o \
QLA_QDN_m1_eq_sum_M.o \
QLA_QDN_m1_veq_sum_M.o \
QLA_QDN_m1_veq_sum_pM.o \
QLA_QDN_m1_xeq_sum_M.o \
QLA_QDN_m1_xeq_sum_pM.o \
QLA_QDN_p1_eq_sum_P.o \
QLA_QDN_p1_veq_sum_P.o \
QLA_QDN_p1_veq_sum_pP.o \
QLA_QDN_p1_xeq_sum_P.o \
QLA_QDN_p1_xeq_sum_pP.o \
QLA_QDN_r1_eq_norm2_D.o \
QLA_QDN_r1_eq_norm2_H.o \
QLA_QDN_r1_eq_norm2_M.o \
QLA_QDN_r1_eq_norm2_P.o \
QLA_QDN_r1_eq_norm2_V.o \
QLA_QDN_r1_eq_re_D_dot_D.o \
QLA_QDN_r1_eq_re_H_dot_H.o \
QLA_QDN_r1_eq_re_M_dot_M.o \
QLA_QDN_r1_eq_re_P_dot_P.o \
QLA_QDN_r1_eq_re_V_dot_V.o \
QLA_QDN_r1_veq_norm2_D.o \
QLA_QDN_r1_veq_norm2_H.o \
QLA_QDN_r1_veq_norm2_M.o \
QLA_QDN_r1_veq_norm2_P.o \
QLA_QDN_r1_veq_norm2_V.o \
QLA_QDN_r1_veq_norm2_pD.o \
QLA_QDN_r1_veq_norm2_pH.o \
QLA_QDN_r1_veq_norm2_pM.o \
QLA_QDN_r1_veq_norm2_pP.o \
QLA_QDN_r1_veq_norm2_pV.o \
QLA_QDN_r1_veq_re_D_dot_D.o \
QLA_QDN_r1_veq_re_D_dot_pD.o \
QLA_QDN_r1_veq_re_H_dot_H.o \
QLA_QDN_r1_veq_re_H_dot_pH.o \
QLA_QDN_r1_veq_re_M_dot_M.o \
QLA_QDN_r1_veq_re_M_dot_pM.o \
QLA_QDN_r1_veq_re_P_dot_P.o \
QLA_QDN_r1_veq_re_P_dot_pP.o \
QLA_QDN_r1_veq_re_V_dot_V.o \
QLA_QDN_r1_veq_re_V_dot_pV.o \
QLA_QDN_r1_veq_re_pD_dot_D.o \
QLA_QDN_r1_veq_re_pD_dot_pD.o \
QLA_QDN_r1_veq_re_pH_dot_H.o \
QLA_QDN_r1_veq_re_pH_dot_pH.o \
QLA_QDN_r1_veq_re_pM_dot_M.o \
QLA_QDN_r1_veq_re_pM_dot_pM.o \
QLA_QDN_r1_veq_re_pP_dot_P.o \
QLA_QDN_r1_veq_re_pP_dot_pP.o \
QLA_QDN_r1_veq_re_pV_dot_V.o \
QLA_QDN_r1_veq_re_pV_dot_pV.o \
QLA_QDN_r1_xeq_norm2_D.o \
QLA_QDN_r1_xeq_norm2_H.o \
QLA_QDN_r1_xeq_norm2_M.o \
QLA_QDN_r1_xeq_norm2_P.o \
QLA_QDN_r1_xeq_norm2_V.o \
QLA_QDN_r1_xeq_norm2_pD.o \
QLA_QDN_r1_xeq_norm2_pH.o \
QLA_QDN_r1_xeq_norm2_pM.o \
QLA_QDN_r1_xeq_norm2_pP.o \
QLA_QDN_r1_xeq_norm2_pV.o \
QLA_QDN_r1_xeq_re_D_dot_D.o \
QLA_QDN_r1_xeq_re_D_dot_pD.o \
QLA_QDN_r1_xeq_re_H_dot_H.o \
QLA_QDN_r1_xeq_re_H_dot_pH.o \
QLA_QDN_r1_xeq_re_M_dot_M.o \
QLA_QDN_r1_xeq_re_M_dot_pM.o \
QLA_QDN_r1_xeq_re_P_dot_P.o \
QLA_QDN_r1_xeq_re_P_dot_pP.o \
QLA_QDN_r1_xeq_re_V_dot_V.o \
QLA_QDN_r1_xeq_re_V_dot_pV.o \
QLA_QDN_r1_xeq_re_pD_dot_D.o \
QLA_QDN_r1_xeq_re_pD_dot_pD.o \
QLA_QDN_r1_xeq_re_pH_dot_H.o \
QLA_QDN_r1_xeq_re_pH_dot_pH.o \
QLA_QDN_r1_xeq_re_pM_dot_M.o \
QLA_QDN_r1_xeq_re_pM_dot_pM.o \
QLA_QDN_r1_xeq_re_pP_dot_P.o \
QLA_QDN_r1_xeq_re_pP_dot_pP.o \
QLA_QDN_r1_xeq_re_pV_dot_V.o \
QLA_QDN_r1_xeq_re_pV_dot_pV.o \
QLA_QDN_v1_eq_sum_V.o \
QLA_QDN_v1_veq_sum_V.o \
QLA_QDN_v1_veq_sum_pV.o \
QLA_QDN_v1_xeq_sum_V.o \
QLA_QDN_v1_xeq_sum_pV.o

QLASRC = $(QLASRC1)
QLAOBJ = $(QLAOBJ1)
BUILD_SCRIPT_DIR = $(top_srcdir)/lib/perl
BUILD_SCRIPT = $(BUILD_SCRIPT_DIR)/build_qla.pl
BUILD_DEPS = \
	$(BUILD_SCRIPT_DIR)/build_qla.pl \
	$(BUILD_SCRIPT_DIR)/datatypes.pl \
	$(BUILD_SCRIPT_DIR)/expressions_gamma.pl \
	$(BUILD_SCRIPT_DIR)/expressions_scalar.pl \
	$(BUILD_SCRIPT_DIR)/expressions_tensor.pl \
	$(BUILD_SCRIPT_DIR)/formatting.pl \
	$(BUILD_SCRIPT_DIR)/headers.pl \
	$(BUILD_SCRIPT_DIR)/indirection.pl \
	$(BUILD_SCRIPT_DIR)/make_code_binary.pl \
	$(BUILD_SCRIPT_DIR)/make_code_real_complex.pl \
	$(BUILD_SCRIPT_DIR)/make_code_ternary.pl \
	$(BUILD_SCRIPT_DIR)/make_code_unary.pl \
	$(BUILD_SCRIPT_DIR)/operatortypes.pl \
	$(BUILD_SCRIPT_DIR)/prototype.pl \
	$(BUILD_SCRIPT_DIR)/variable_names.pl

lib_LIBRARIES = ../libqla_dqn.a
AM_CFLAGS = -I$(top_srcdir)/include -DQLA_RESTRICT=restrict  -DQLA_Colors=\'N\'

# this is just to force automake to include the .c.o rule
nodist____libqla_dqn_a_SOURCES = QLA_DQN_D_eq_D.c
nodist_include_HEADERS = $(top_builddir)/include/qla_dqn.h $(top_builddir)/include/qla_dqn_color_generic.h
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  lib/qla_dqn/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  lib/qla_dqn/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(mkdir_p) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
../$(am__dirstamp):
	@$(mkdir_p) ..
	@: > ../$(am__dirstamp)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`
uninstall-info-am:
install-nodist_includeHEADERS: $(nodist_include_HEADERS)
	@$(NORMAL_INSTALL)
	test -z "$(includedir)" || $(mkdir_p) "$(DESTDIR)$(includedir)"
	@list='$(nodist_include_HEADERS)'; for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  f=$(am__strip_dir) \
	  echo " $(nodist_includeHEADERS_INSTALL) '$$d$$p' '$(DESTDIR)$(includedir)/$$f'"; \
	  $(nodist_includeHEADERS_INSTALL) "$$d$$p" "$(DESTDIR)$(includedir)/$$f"; \
	done

uninstall-nodist_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_include_HEADERS)'; for p in $$list; do \
	  f=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(includedir)/$$f'"; \
	  rm -f "$(DESTDIR)$(includedir)/$$f"; \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(includedir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-rm -f ../$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libLIBRARIES clean-local mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am: install-nodist_includeHEADERS

install-exec-am: install-libLIBRARIES

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am uninstall-libLIBRARIES \
	uninstall-nodist_includeHEADERS

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libLIBRARIES clean-local ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-libLIBRARIES install-man \
	install-nodist_includeHEADERS install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-info-am uninstall-libLIBRARIES \
	uninstall-nodist_includeHEADERS


source-stamp: $(BUILD_DEPS) 
	@rm -f source-temp
	@touch source-temp
	$(PERL) $(BUILD_SCRIPT) QLA_DQN $(top_builddir)/include/qla_dqn.h .
	@mv -f source-temp $@

$(QLASRC) $(nodist_include_HEADERS): source-stamp
	@if test -f $@; then :; else \
	  trap 'rm -rf source-lock source-stamp' 1 2 13 15; \
	  if mkdir source-lock 2>/dev/null; then \
	    rm -f source-stamp; \
	    $(MAKE) $(AM_MAKEFLAGS) source-stamp; \
	    rmdir source-lock; \
	  else \
	    while test -d source-lock; do sleep 1; done; \
	    test -f source-stamp; exit $$?; \
	  fi; \
	fi

../libqla_dqn.a: $(QLAOBJ) ../optimized/Makefile
	-rm -f ../libqla_dqn.a
	$(AR) $(ARFLAGS) ../libqla_dqn.a $(QLAOBJ1)
	$(RANLIB) ../libqla_dqn.a

clean-local:
	-rm -f $(nodist_include_HEADERS) source-stamp
	-rm -f $(QLASRC1)
	-rm -f $(QLAOBJ1)
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
